{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Greeter_InvalidGreeting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Greeter_OnlyOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "GreetingSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "greet",
      "outputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "greeting",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162000a7538038062000a75833981016040819052620000349162000240565b33608052600180546001600160a01b0319166001600160a01b0383161790556200005e8262000066565b50506200037e565b6080516001600160a01b0316336001600160a01b0316146200009b57604051630bec364760e31b815260040160405180910390fd5b805160208201207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b9001620000e2576040516342883a0560e11b815260040160405180910390fd5b8051620000f790600090602084019062000134565b507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f06816040516200012991906200030d565b60405180910390a150565b828054620001429062000342565b90600052602060002090601f016020900481019282620001665760008555620001b1565b82601f106200018157805160ff1916838001178555620001b1565b82800160010185558215620001b1579182015b82811115620001b157825182559160200191906001019062000194565b50620001bf929150620001c3565b5090565b5b80821115620001bf5760008155600101620001c4565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200020d578181015183820152602001620001f3565b838111156200021d576000848401525b50505050565b80516001600160a01b03811681146200023b57600080fd5b919050565b600080604083850312156200025457600080fd5b82516001600160401b03808211156200026c57600080fd5b818501915085601f8301126200028157600080fd5b815181811115620002965762000296620001da565b604051601f8201601f19908116603f01168101908382118183101715620002c157620002c1620001da565b81604052828152886020848701011115620002db57600080fd5b620002ee836020830160208801620001f0565b8096505050505050620003046020840162000223565b90509250929050565b60208152600082518060208401526200032e816040850160208701620001f0565b601f01601f19169190910160400192915050565b600181811c908216806200035757607f821691505b6020821081036200037857634e487b7160e01b600052602260045260246000fd5b50919050565b6080516106d5620003a0600039600081816071015261013501526106d56000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063cfae321711610050578063cfae3217146100d2578063ef690cc0146100e8578063fc0c546a146100fd57600080fd5b8063117803e31461006c578063a4136862146100bd575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d06100cb3660046104bd565b61011d565b005b6100da610239565b6040516100b49291906105f7565b6100f0610367565b6040516100b49190610619565b6001546100939073ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461018c576040517f5f61b23800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805160208201207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b90016101eb576040517f8510740a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80516101fe9060009060208401906103f5565b507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f068160405161022e9190610619565b60405180910390a150565b6060600080805461024990610633565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610633565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b50506001546040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015294965073ffffffffffffffffffffffffffffffffffffffff16936370a08231935060240191506103209050565b602060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103619190610686565b90509091565b6000805461037490610633565b80601f01602080910402602001604051908101604052809291908181526020018280546103a090610633565b80156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b505050505081565b82805461040190610633565b90600052602060002090601f0160209004810192826104235760008555610469565b82601f1061043c57805160ff1916838001178555610469565b82800160010185558215610469579182015b8281111561046957825182559160200191906001019061044e565b50610475929150610479565b5090565b5b80821115610475576000815560010161047a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156104cf57600080fd5b813567ffffffffffffffff808211156104e757600080fd5b818401915084601f8301126104fb57600080fd5b81358181111561050d5761050d61048e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105535761055361048e565b8160405282815287602084870101111561056c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156105b257602081850181015186830182015201610596565b818111156105c4576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061060a604083018561058c565b90508260208301529392505050565b60208152600061062c602083018461058c565b9392505050565b600181811c9082168061064757607f821691505b602082108103610680577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561069857600080fd5b505191905056fea26469706673582212208b0ab604617c503ed4cd6e6a243a56defd3ba82d0b9f7b7adf3973bcf2740fdf64736f6c634300080e0033",
    "sourceMap": "185:1362:8:-:0;;;755:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;821:10;813:18;;837:5;:14;;-1:-1:-1;;;;;;837:14:8;-1:-1:-1;;;;;837:14:8;;;;;857:22;869:9;857:11;:22::i;:::-;755:129;;185:1362;;915:230;1486:5;;-1:-1:-1;;;;;1472:19:8;:10;-1:-1:-1;;;;;1472:19:8;;1468:66;;1508:19;;-1:-1:-1;;;1508:19:8;;;;;;;;;;;1468:66;988:27;;::::1;::::0;::::1;::::0;:44;;984:97:::1;;1049:25;;-1:-1:-1::0;;;1049:25:8::1;;;;;;;;;;;984:97;1087:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1118:22;1130:9;1118:22;;;;;;:::i;:::-;;;;;;;;915:230:::0;:::o;185:1362::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;185:1362:8;;;-1:-1:-1;185:1362:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:15;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:258;218:1;228:113;242:6;239:1;236:13;228:113;;;318:11;;;312:18;299:11;;;292:39;264:2;257:10;228:113;;;359:6;356:1;353:13;350:48;;;394:1;385:6;380:3;376:16;369:27;350:48;;146:258;;;:::o;409:185::-;496:13;;-1:-1:-1;;;;;538:31:15;;528:42;;518:70;;584:1;581;574:12;518:70;409:185;;;:::o;599:1001::-;704:6;712;765:2;753:9;744:7;740:23;736:32;733:52;;;781:1;778;771:12;733:52;808:16;;-1:-1:-1;;;;;873:14:15;;;870:34;;;900:1;897;890:12;870:34;938:6;927:9;923:22;913:32;;983:7;976:4;972:2;968:13;964:27;954:55;;1005:1;1002;995:12;954:55;1034:2;1028:9;1056:2;1052;1049:10;1046:36;;;1062:18;;:::i;:::-;1137:2;1131:9;1105:2;1191:13;;-1:-1:-1;;1187:22:15;;;1211:2;1183:31;1179:40;1167:53;;;1235:18;;;1255:22;;;1232:46;1229:72;;;1281:18;;:::i;:::-;1321:10;1317:2;1310:22;1356:2;1348:6;1341:18;1398:7;1391:4;1386:2;1382;1378:11;1374:22;1371:35;1368:55;;;1419:1;1416;1409:12;1368:55;1432:59;1488:2;1481:4;1473:6;1469:17;1462:4;1458:2;1454:13;1432:59;:::i;:::-;1510:6;1500:16;;;;;;;1535:59;1588:4;1577:9;1573:20;1535:59;:::i;:::-;1525:69;;599:1001;;;;;:::o;1605:383::-;1754:2;1743:9;1736:21;1717:4;1786:6;1780:13;1829:6;1824:2;1813:9;1809:18;1802:34;1845:66;1904:6;1899:2;1888:9;1884:18;1879:2;1871:6;1867:15;1845:66;:::i;:::-;1972:2;1951:15;-1:-1:-1;;1947:29:15;1932:45;;;;1979:2;1928:54;;1605:383;-1:-1:-1;;1605:383:15:o;1993:380::-;2072:1;2068:12;;;;2115;;;2136:61;;2190:4;2182:6;2178:17;2168:27;;2136:61;2243:2;2235:6;2232:14;2212:18;2209:38;2206:161;;2289:10;2284:3;2280:20;2277:1;2270:31;2324:4;2321:1;2314:15;2352:4;2349:1;2342:15;2206:161;;1993:380;;;:::o;:::-;185:1362:8;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063cfae321711610050578063cfae3217146100d2578063ef690cc0146100e8578063fc0c546a146100fd57600080fd5b8063117803e31461006c578063a4136862146100bd575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d06100cb3660046104bd565b61011d565b005b6100da610239565b6040516100b49291906105f7565b6100f0610367565b6040516100b49190610619565b6001546100939073ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461018c576040517f5f61b23800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805160208201207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b90016101eb576040517f8510740a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80516101fe9060009060208401906103f5565b507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f068160405161022e9190610619565b60405180910390a150565b6060600080805461024990610633565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610633565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b50506001546040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015294965073ffffffffffffffffffffffffffffffffffffffff16936370a08231935060240191506103209050565b602060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103619190610686565b90509091565b6000805461037490610633565b80601f01602080910402602001604051908101604052809291908181526020018280546103a090610633565b80156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b505050505081565b82805461040190610633565b90600052602060002090601f0160209004810192826104235760008555610469565b82601f1061043c57805160ff1916838001178555610469565b82800160010185558215610469579182015b8281111561046957825182559160200191906001019061044e565b50610475929150610479565b5090565b5b80821115610475576000815560010161047a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156104cf57600080fd5b813567ffffffffffffffff808211156104e757600080fd5b818401915084601f8301126104fb57600080fd5b81358181111561050d5761050d61048e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105535761055361048e565b8160405282815287602084870101111561056c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156105b257602081850181015186830182015201610596565b818111156105c4576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061060a604083018561058c565b90508260208301529392505050565b60208152600061062c602083018461058c565b9392505050565b600181811c9082168061064757607f821691505b602082108103610680577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561069857600080fd5b505191905056fea26469706673582212208b0ab604617c503ed4cd6e6a243a56defd3ba82d0b9f7b7adf3973bcf2740fdf64736f6c634300080e0033",
    "sourceMap": "185:1362:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:30;;;;;;;;190:42:15;178:55;;;160:74;;148:2;133:18;442:30:8;;;;;;;;915:230;;;;;;:::i;:::-;;:::i;:::-;;1176:158;;;:::i;:::-;;;;;;;;:::i;504:22::-;;;:::i;:::-;;;;;;;:::i;558:19::-;;;;;;;;;915:230;1472:10;:19;1486:5;1472:19;;1468:66;;1508:19;;;;;;;;;;;;;;1468:66;988:27;;::::1;::::0;::::1;::::0;:44;;984:97:::1;;1049:25;;;;;;;;;;;;;;984:97;1087:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1118:22;1130:9;1118:22;;;;;;:::i;:::-;;;;;;;;915:230:::0;:::o;1176:158::-;1216:23;1241:16;1277:8;1265:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1302:5:8;;:27;;;;;1318:10;1302:27;;;160:74:15;1265:20:8;;-1:-1:-1;1302:5:8;;;:15;;-1:-1:-1;133:18:15;;;-1:-1:-1;1302:27:8;;-1:-1:-1;14:226:15;1302:27:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1291:38;;1176:158;;:::o;504:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;245:184:15;297:77;294:1;287:88;394:4;391:1;384:15;418:4;415:1;408:15;434:981;503:6;556:2;544:9;535:7;531:23;527:32;524:52;;;572:1;569;562:12;524:52;612:9;599:23;641:18;682:2;674:6;671:14;668:34;;;698:1;695;688:12;668:34;736:6;725:9;721:22;711:32;;781:7;774:4;770:2;766:13;762:27;752:55;;803:1;800;793:12;752:55;839:2;826:16;861:2;857;854:10;851:36;;;867:18;;:::i;:::-;1001:2;995:9;1063:4;1055:13;;906:66;1051:22;;;1075:2;1047:31;1043:40;1031:53;;;1099:18;;;1119:22;;;1096:46;1093:72;;;1145:18;;:::i;:::-;1185:10;1181:2;1174:22;1220:2;1212:6;1205:18;1260:7;1255:2;1250;1246;1242:11;1238:20;1235:33;1232:53;;;1281:1;1278;1271:12;1232:53;1337:2;1332;1328;1324:11;1319:2;1311:6;1307:15;1294:46;1382:1;1360:15;;;1377:2;1356:24;1349:35;;;;-1:-1:-1;1364:6:15;434:981;-1:-1:-1;;;;;434:981:15:o;1420:531::-;1462:3;1500:5;1494:12;1527:6;1522:3;1515:19;1552:1;1562:162;1576:6;1573:1;1570:13;1562:162;;;1638:4;1694:13;;;1690:22;;1684:29;1666:11;;;1662:20;;1655:59;1591:12;1562:162;;;1742:6;1739:1;1736:13;1733:87;;;1808:1;1801:4;1792:6;1787:3;1783:16;1779:27;1772:38;1733:87;-1:-1:-1;1865:2:15;1853:15;1870:66;1849:88;1840:98;;;;1940:4;1836:109;;1420:531;-1:-1:-1;;1420:531:15:o;1956:291::-;2133:2;2122:9;2115:21;2096:4;2153:45;2194:2;2183:9;2179:18;2171:6;2153:45;:::i;:::-;2145:53;;2234:6;2229:2;2218:9;2214:18;2207:34;1956:291;;;;;:::o;2252:220::-;2401:2;2390:9;2383:21;2364:4;2421:45;2462:2;2451:9;2447:18;2439:6;2421:45;:::i;:::-;2413:53;2252:220;-1:-1:-1;;;2252:220:15:o;2724:437::-;2803:1;2799:12;;;;2846;;;2867:61;;2921:4;2913:6;2909:17;2899:27;;2867:61;2974:2;2966:6;2963:14;2943:18;2940:38;2937:218;;3011:77;3008:1;3001:88;3112:4;3109:1;3102:15;3140:4;3137:1;3130:15;2937:218;;2724:437;;;:::o;3166:184::-;3236:6;3289:2;3277:9;3268:7;3264:23;3260:32;3257:52;;;3305:1;3302;3295:12;3257:52;-1:-1:-1;3328:16:15;;3166:184;-1:-1:-1;3166:184:15:o",
    "linkReferences": {},
    "immutableReferences": {
      "21219": [
        {
          "start": 113,
          "length": 32
        },
        {
          "start": 309,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "OWNER()": "117803e3",
    "greet()": "cfae3217",
    "greeting()": "ef690cc0",
    "setGreeting(string)": "a4136862",
    "token()": "fc0c546a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Greeter_InvalidGreeting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Greeter_OnlyOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"GreetingSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Greeter_InvalidGreeting()\":[{\"details\":\"Empty string is an invalid greeting\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_greeting\":\"Initial greeting\",\"_token\":\"Initial token\"}},\"greet()\":{\"returns\":{\"_balance\":\" Current token balance of the caller\",\"_greeting\":\"The greeting\"}},\"setGreeting(string)\":{\"details\":\"Only callable by the owner\",\"params\":{\"_newGreeting\":\"The new greeting to be set\"}}},\"stateVariables\":{\"OWNER\":{\"details\":\"The owner will always be the deployer of the contract\",\"return\":\"The owner of the contract\",\"returns\":{\"_0\":\"The owner of the contract\"}},\"_EMPTY_STRING\":{\"details\":\"result of doing keccak256(bytes(''))\"},\"greeting\":{\"return\":\"The greeting\",\"returns\":{\"_0\":\"The greeting\"}},\"token\":{\"return\":\"The address of the token\",\"returns\":{\"_0\":\"The address of the token\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Greeter_InvalidGreeting()\":[{\"notice\":\"Throws if the greeting set is invalid\"}],\"Greeter_OnlyOwner()\":[{\"notice\":\"Throws if the function was called by someone else than the owner\"}]},\"events\":{\"GreetingSet(string)\":{\"notice\":\"Greeting has changed\"}},\"kind\":\"user\",\"methods\":{\"OWNER()\":{\"notice\":\"Returns the owner of the contract\"},\"constructor\":{\"notice\":\"Defines the owner to the msg.sender and sets the initial greeting\"},\"greet()\":{\"notice\":\"Returns set previously set greeting\"},\"greeting()\":{\"notice\":\"Returns the greeting\"},\"setGreeting(string)\":{\"notice\":\"Sets a new greeting\"},\"token()\":{\"notice\":\"Returns the token used to greet callers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":contracts/=solidity/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":interfaces/=solidity/interfaces/\",\":isolmate/=lib/isolmate/src/\",\":prb-test/=lib/prb-test/src/\",\":prb/test/=lib/prb-test/src/\",\":test/=solidity/test/\"]},\"sources\":{\"lib/isolmate/src/interfaces/tokens/IERC20.sol\":{\"keccak256\":\"0xea23a986a9efba47639b24eae7dbfd6936be01e5fc3530202fe1f4b8bb4131b8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://37e08545e18de038023d32de846032533af9513c0b7b84a6c5c371941b6bd5f7\",\"dweb:/ipfs/QmRYNSXwiJ9wE36ogE5J77g6pbGK7T7qqqAF99DZq3eW5B\"]},\"solidity/contracts/Greeter.sol\":{\"keccak256\":\"0xdb5617bca834a49cbe20979354a4d3a20952d027b6473afd9207bd8fb28f4f68\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7c8f6ed2c49599da211a4cf018ae64ce6a720d3785538923ab8fdc60308959a6\",\"dweb:/ipfs/QmUm98Nt6s3ieCF75zLNokSWF7isG1Wr6rhJqRhbe2Kah4\"]},\"solidity/interfaces/IGreeter.sol\":{\"keccak256\":\"0x6f53a4167ef0e91950a02e0789712bc576ece51f979533c8eb13d25b55095d1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18f0c6b8609cc721fcf260ec5b2ae270b90b38b7a291cde834989082e603527\",\"dweb:/ipfs/QmPbjC4yUtyELy7JAFUqZPg8Zxxk7666DpKt7fdtQVvWRU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Greeter_InvalidGreeting"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Greeter_OnlyOwner"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GreetingSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OWNER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "greet",
          "outputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "greeting",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGreeting"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_greeting": "Initial greeting",
              "_token": "Initial token"
            }
          },
          "greet()": {
            "returns": {
              "_balance": " Current token balance of the caller",
              "_greeting": "The greeting"
            }
          },
          "setGreeting(string)": {
            "details": "Only callable by the owner",
            "params": {
              "_newGreeting": "The new greeting to be set"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "OWNER()": {
            "notice": "Returns the owner of the contract"
          },
          "constructor": {
            "notice": "Defines the owner to the msg.sender and sets the initial greeting"
          },
          "greet()": {
            "notice": "Returns set previously set greeting"
          },
          "greeting()": {
            "notice": "Returns the greeting"
          },
          "setGreeting(string)": {
            "notice": "Sets a new greeting"
          },
          "token()": {
            "notice": "Returns the token used to greet callers"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":contracts/=solidity/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":interfaces/=solidity/interfaces/",
        ":isolmate/=lib/isolmate/src/",
        ":prb-test/=lib/prb-test/src/",
        ":prb/test/=lib/prb-test/src/",
        ":test/=solidity/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "solidity/contracts/Greeter.sol": "Greeter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/isolmate/src/interfaces/tokens/IERC20.sol": {
        "keccak256": "0xea23a986a9efba47639b24eae7dbfd6936be01e5fc3530202fe1f4b8bb4131b8",
        "urls": [
          "bzz-raw://37e08545e18de038023d32de846032533af9513c0b7b84a6c5c371941b6bd5f7",
          "dweb:/ipfs/QmRYNSXwiJ9wE36ogE5J77g6pbGK7T7qqqAF99DZq3eW5B"
        ],
        "license": "AGPL-3.0-only"
      },
      "solidity/contracts/Greeter.sol": {
        "keccak256": "0xdb5617bca834a49cbe20979354a4d3a20952d027b6473afd9207bd8fb28f4f68",
        "urls": [
          "bzz-raw://7c8f6ed2c49599da211a4cf018ae64ce6a720d3785538923ab8fdc60308959a6",
          "dweb:/ipfs/QmUm98Nt6s3ieCF75zLNokSWF7isG1Wr6rhJqRhbe2Kah4"
        ],
        "license": "UNLICENSED"
      },
      "solidity/interfaces/IGreeter.sol": {
        "keccak256": "0x6f53a4167ef0e91950a02e0789712bc576ece51f979533c8eb13d25b55095d1e",
        "urls": [
          "bzz-raw://f18f0c6b8609cc721fcf260ec5b2ae270b90b38b7a291cde834989082e603527",
          "dweb:/ipfs/QmPbjC4yUtyELy7JAFUqZPg8Zxxk7666DpKt7fdtQVvWRU"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "solidity/contracts/Greeter.sol",
    "id": 21316,
    "exportedSymbols": {
      "Greeter": [
        21315
      ],
      "IERC20": [
        17040
      ],
      "IGreeter": [
        21365
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1509:8",
    "nodes": [
      {
        "id": 21206,
        "nodeType": "PragmaDirective",
        "src": "39:31:8",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 21208,
        "nodeType": "ImportDirective",
        "src": "72:61:8",
        "absolutePath": "lib/isolmate/src/interfaces/tokens/IERC20.sol",
        "file": "isolmate/interfaces/tokens/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21316,
        "sourceUnit": 17041,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21207,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 17040,
              "src": "80:6:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21210,
        "nodeType": "ImportDirective",
        "src": "134:49:8",
        "absolutePath": "solidity/interfaces/IGreeter.sol",
        "file": "interfaces/IGreeter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21316,
        "sourceUnit": 21366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21209,
              "name": "IGreeter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21365,
              "src": "142:8:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21315,
        "nodeType": "ContractDefinition",
        "src": "185:1362:8",
        "nodes": [
          {
            "id": 21216,
            "nodeType": "VariableDeclaration",
            "src": "302:108:8",
            "constant": true,
            "documentation": {
              "id": 21213,
              "nodeType": "StructuredDocumentation",
              "src": "254:45:8",
              "text": "@dev result of doing keccak256(bytes(''))"
            },
            "mutability": "constant",
            "name": "_EMPTY_STRING",
            "nameLocation": "328:13:8",
            "scope": 21315,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21214,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
              "id": 21215,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "344:66:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                "typeString": "int_const 8947...(69 digits omitted)...1552"
              },
              "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
            },
            "visibility": "internal"
          },
          {
            "id": 21219,
            "nodeType": "VariableDeclaration",
            "src": "442:30:8",
            "baseFunctions": [
              21337
            ],
            "constant": false,
            "documentation": {
              "id": 21217,
              "nodeType": "StructuredDocumentation",
              "src": "415:24:8",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "117803e3",
            "mutability": "immutable",
            "name": "OWNER",
            "nameLocation": "467:5:8",
            "scope": 21315,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21218,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21222,
            "nodeType": "VariableDeclaration",
            "src": "504:22:8",
            "baseFunctions": [
              21343
            ],
            "constant": false,
            "documentation": {
              "id": 21220,
              "nodeType": "StructuredDocumentation",
              "src": "477:24:8",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "ef690cc0",
            "mutability": "mutable",
            "name": "greeting",
            "nameLocation": "518:8:8",
            "scope": 21315,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21221,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "504:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21226,
            "nodeType": "VariableDeclaration",
            "src": "558:19:8",
            "baseFunctions": [
              21350
            ],
            "constant": false,
            "documentation": {
              "id": 21223,
              "nodeType": "StructuredDocumentation",
              "src": "531:24:8",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "572:5:8",
            "scope": 21315,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$17040",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 21225,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21224,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17040,
                "src": "558:6:8"
              },
              "referencedDeclaration": 17040,
              "src": "558:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$17040",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21249,
            "nodeType": "FunctionDefinition",
            "src": "755:129:8",
            "body": {
              "id": 21248,
              "nodeType": "Block",
              "src": "807:77:8",
              "statements": [
                {
                  "expression": {
                    "id": 21238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21235,
                      "name": "OWNER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21219,
                      "src": "813:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 21236,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "821:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "821:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "813:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21239,
                  "nodeType": "ExpressionStatement",
                  "src": "813:18:8"
                },
                {
                  "expression": {
                    "id": 21242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21240,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21226,
                      "src": "837:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17040",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21241,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21232,
                      "src": "845:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17040",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "837:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17040",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 21243,
                  "nodeType": "ExpressionStatement",
                  "src": "837:14:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21245,
                        "name": "_greeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21229,
                        "src": "869:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 21244,
                      "name": "setGreeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21279,
                      "src": "857:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 21246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21247,
                  "nodeType": "ExpressionStatement",
                  "src": "857:22:8"
                }
              ]
            },
            "documentation": {
              "id": 21227,
              "nodeType": "StructuredDocumentation",
              "src": "582:170:8",
              "text": " @notice Defines the owner to the msg.sender and sets the\n initial greeting\n @param _greeting Initial greeting\n @param _token Initial token"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21229,
                  "mutability": "mutable",
                  "name": "_greeting",
                  "nameLocation": "781:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21249,
                  "src": "767:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21232,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "799:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21249,
                  "src": "792:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$17040",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 21231,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 21230,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17040,
                      "src": "792:6:8"
                    },
                    "referencedDeclaration": 17040,
                    "src": "792:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17040",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:40:8"
            },
            "returnParameters": {
              "id": 21234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:0:8"
            },
            "scope": 21315,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21279,
            "nodeType": "FunctionDefinition",
            "src": "915:230:8",
            "body": {
              "id": 21278,
              "nodeType": "Block",
              "src": "978:167:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 21264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21260,
                              "name": "_greeting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21252,
                              "src": "1004:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 21259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "998:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 21258,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "998:5:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 21257,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "988:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 21262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "988:27:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 21263,
                      "name": "_EMPTY_STRING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21216,
                      "src": "1019:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "988:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21269,
                  "nodeType": "IfStatement",
                  "src": "984:97:8",
                  "trueBody": {
                    "id": 21268,
                    "nodeType": "Block",
                    "src": "1034:47:8",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 21265,
                            "name": "Greeter_InvalidGreeting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21331,
                            "src": "1049:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 21266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1049:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21267,
                        "nodeType": "RevertStatement",
                        "src": "1042:32:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 21272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21270,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21222,
                      "src": "1087:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21271,
                      "name": "_greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21252,
                      "src": "1098:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1087:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21273,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:20:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21275,
                        "name": "_greeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21252,
                        "src": "1130:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 21274,
                      "name": "GreetingSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21325,
                      "src": "1118:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 21276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21277,
                  "nodeType": "EmitStatement",
                  "src": "1113:27:8"
                }
              ]
            },
            "baseFunctions": [
              21364
            ],
            "documentation": {
              "id": 21250,
              "nodeType": "StructuredDocumentation",
              "src": "888:24:8",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "a4136862",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21254,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21314,
                  "src": "968:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "968:9:8"
              }
            ],
            "name": "setGreeting",
            "nameLocation": "924:11:8",
            "parameters": {
              "id": 21253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21252,
                  "mutability": "mutable",
                  "name": "_greeting",
                  "nameLocation": "950:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21279,
                  "src": "936:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21251,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:25:8"
            },
            "returnParameters": {
              "id": 21256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:8"
            },
            "scope": 21315,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21300,
            "nodeType": "FunctionDefinition",
            "src": "1176:158:8",
            "body": {
              "id": 21299,
              "nodeType": "Block",
              "src": "1259:75:8",
              "statements": [
                {
                  "expression": {
                    "id": 21289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21287,
                      "name": "_greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21283,
                      "src": "1265:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21288,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21222,
                      "src": "1277:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1265:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 21290,
                  "nodeType": "ExpressionStatement",
                  "src": "1265:20:8"
                },
                {
                  "expression": {
                    "id": 21297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21291,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21285,
                      "src": "1291:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 21294,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1318:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1318:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21292,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21226,
                          "src": "1302:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$17040",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 21293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16972,
                        "src": "1302:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 21296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1302:27:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1291:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21298,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:38:8"
                }
              ]
            },
            "baseFunctions": [
              21358
            ],
            "documentation": {
              "id": 21280,
              "nodeType": "StructuredDocumentation",
              "src": "1149:24:8",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "cfae3217",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "greet",
            "nameLocation": "1185:5:8",
            "parameters": {
              "id": 21281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:2:8"
            },
            "returnParameters": {
              "id": 21286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21283,
                  "mutability": "mutable",
                  "name": "_greeting",
                  "nameLocation": "1230:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21300,
                  "src": "1216:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21285,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nameLocation": "1249:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21300,
                  "src": "1241:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1215:43:8"
            },
            "scope": 21315,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21314,
            "nodeType": "ModifierDefinition",
            "src": "1441:104:8",
            "body": {
              "id": 21313,
              "nodeType": "Block",
              "src": "1462:83:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 21306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 21303,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1472:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1472:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 21305,
                      "name": "OWNER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21219,
                      "src": "1486:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1472:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21311,
                  "nodeType": "IfStatement",
                  "src": "1468:66:8",
                  "trueBody": {
                    "id": 21310,
                    "nodeType": "Block",
                    "src": "1493:41:8",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 21307,
                            "name": "Greeter_OnlyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21328,
                            "src": "1508:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 21308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1508:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21309,
                        "nodeType": "RevertStatement",
                        "src": "1501:26:8"
                      }
                    ]
                  }
                },
                {
                  "id": 21312,
                  "nodeType": "PlaceholderStatement",
                  "src": "1539:1:8"
                }
              ]
            },
            "documentation": {
              "id": 21301,
              "nodeType": "StructuredDocumentation",
              "src": "1338:100:8",
              "text": " @notice Reverts in case the function was not called by\n the owner of the contract"
            },
            "name": "onlyOwner",
            "nameLocation": "1450:9:8",
            "parameters": {
              "id": 21302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:2:8"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21211,
              "name": "IGreeter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21365,
              "src": "205:8:8"
            },
            "id": 21212,
            "nodeType": "InheritanceSpecifier",
            "src": "205:8:8"
          }
        ],
        "canonicalName": "Greeter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21315,
          21365
        ],
        "name": "Greeter",
        "nameLocation": "194:7:8",
        "scope": 21316,
        "usedErrors": [
          21328,
          21331
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 8
}